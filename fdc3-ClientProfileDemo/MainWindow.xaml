<Window x:Class="FDC3ChannelsClientProfileDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
        xmlns:hc="http://tick42.com/gd/xaml/hc"
        xmlns:poco="clr-namespace:FDC3ChannelsClientProfileDemo.POCO"
        xmlns:fdc3ChannelsClientProfileDemo="clr-namespace:FDC3ChannelsClientProfileDemo"
        mc:Ignorable="d"
        BorderThickness="0"
        x:ClassModifier="internal"
        Title="Client Portfolio" Height="640" Width="660"
        Background="Red"
        d:DataContext="{d:DesignInstance Type=fdc3ChannelsClientProfileDemo:MainWindow, IsDesignTimeCreatable=True}">
    <Window.Resources>
        <Style x:Key="BorderedItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Name="Border" BorderBrush="Black" BorderThickness="2">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <poco:ClientsCollection x:Key="Clients" />
        <poco:PortfolioCollection x:Key="ClientPortfolio" />
        <CollectionViewSource Source="{StaticResource Clients}"  x:Key="clientsCvs" Filter="CollectionViewSource_Filter"></CollectionViewSource>
    </Window.Resources>
    <Grid Background="#ff1B2327">
        <Grid.RowDefinitions>
            <RowDefinition Height="230"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="55"/>
        </Grid.RowDefinitions>
        <StackPanel Margin="0,0,0,0" >
            <StackPanel.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#ff273339" Offset="0"/>
                    <GradientStop Color="#ff333E43" Offset="0.490"/>
                    <GradientStop Color="#ff1B2327" Offset="0.820"/>
                </LinearGradientBrush>
            </StackPanel.Background>
            <Grid Margin="20,10,0,0">
                <StackPanel x:Name="LogoStackPanel" Orientation="Horizontal">
                    <Image Source="pack://application:,,,/Resources/glue-clean.png" Height="32" HorizontalAlignment="Left" ></Image>
                </StackPanel>
                <Button x:Name="ClientPortfolioButton" Click="ClientPortfolioButton_Click" Cursor="Hand" Height="32" Width="140" Background="Red" BorderThickness="0" FontFamily="pack://application:,,,/Resources/#roboto" FontSize="10pt"  VerticalAlignment="Center" Grid.Column="1"  HorizontalAlignment="Right"  Margin="0,0,20,0"  >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="Transparent" Height="32" CornerRadius="16" BorderThickness="0.5">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="BorderBrush" Value="LightGray"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderBrush" Value="White"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Foreground" Value="#ff819191"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <TextBlock Padding="0,1,0,0">
                        Client Portfolio
                    </TextBlock>
                </Button>

            </Grid>
            <Label x:Name="TitleLabel" Foreground="White" Margin="0,4,0,0" FontSize="38px" FontFamily="pack://application:,,,/Resources/#roboto thin"  HorizontalAlignment="Center">Client Portfolio</Label>
            <Border BorderThickness="0" BorderBrush="Black" CornerRadius="20" Margin="30,30,30,0" Padding="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FF434E54" >
                <TextBox x:Name="TextBoxFilter" CaretBrush="White" FontFamily="pack://application:,,,/Resources/#roboto" Margin="20,0,20,0" Foreground="White" FontSize="16" FontWeight="Thin" BorderThickness="0" Background="#FF434E54" HorizontalAlignment="Stretch" />
            </Border>
            <StackPanel Orientation="Horizontal">
                <ItemsControl ItemsSource="{Binding SyncFeatures}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <GroupBox Header="{Binding Name}" Margin="4,0" Foreground="AliceBlue">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Content="Listen" IsChecked="{Binding Listen}" Margin="5,0" Foreground="AliceBlue"/>
                                    <CheckBox Content="Send" IsChecked="{Binding Send}" Margin="5,0" Foreground="AliceBlue"/>
                                </StackPanel>
                            </GroupBox>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </StackPanel>
        <StackPanel x:Name="ConnectivityPopup" Grid.Row="1" Margin="22,5,22,5" Visibility="Hidden">
            <StackPanel.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#ff1B2327" Offset="0"/>
                    <GradientStop Color="#ff1B2327" Offset="0.3"/>
                    <GradientStop Color="#ff202b30" Offset="0.500"/>
                    <GradientStop Color="#ff1B2327" Offset="0.7"/>
                    <GradientStop Color="#ff1B2327" Offset="1"/>
                </LinearGradientBrush>
            </StackPanel.Background>
            <Button HorizontalAlignment="Right" FontFamily="Arial" FontSize="18" Margin="5" Click="XButton_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="Transparent" BorderThickness="1" Padding="{TemplateBinding Padding}">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="BorderBrush" Value="LightGray"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="White"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="#ff819191"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <TextBlock Padding="10,0,10,3">x</TextBlock>
            </Button>
            <Label Foreground="White" Margin="0,15,0,0" FontSize="28px" FontFamily="pack://application:,,,/Resources/#roboto thin"  HorizontalAlignment="Center">Glue Status</Label>
            <StackPanel x:Name="ConnectivityIndicatorStackPanel1" Margin="10,5,0,0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Label x:Name="ConnectivityCircleLabel1" FontFamily="Arial" Foreground="#ff81ae5a" FontWeight="ExtraLight" FontSize="8" HorizontalAlignment="Center"  VerticalAlignment="Center" RenderTransformOrigin="0.54,0.54">
                    <Label.RenderTransform>
                        <ScaleTransform ScaleX="5" ScaleY="5"></ScaleTransform>
                    </Label.RenderTransform> ⚬
                </Label>
                <Label x:Name="ConnectivityTextLabel1"  FontFamily="pack://application:,,,/Resources/#roboto" Foreground="#ff819191" FontSize="14" HorizontalAlignment="Right"  VerticalAlignment="Center" >Connected</Label>
            </StackPanel>
            <Label x:Name="UsernameLabel" Foreground="White" Margin="20,50,0,0" FontSize="16px" FontFamily="pack://application:,,,/Resources/#roboto thin"  HorizontalAlignment="Left">Username:</Label>
            <Label x:Name="URLLabel" Foreground="White" Margin="20,10,0,0" FontSize="16px" FontFamily="pack://application:,,,/Resources/#roboto thin"  HorizontalAlignment="Left">URL:</Label>
            <Label Foreground="White" Margin="20,10,0,0" FontSize="16px" FontFamily="pack://application:,,,/Resources/#roboto thin"  HorizontalAlignment="Left">
                <TextBlock x:Name="ServersLabel"  TextWrapping="Wrap">Servers:</TextBlock>
            </Label>
        </StackPanel>
        <Grid x:Name="UIGrid" Margin="5,-8,5,0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="0.5*" />
            </Grid.ColumnDefinitions>
            <ListView
                x:Name="ClientsListView"
                Margin="-4,0,-4,0"
                Padding="3,0,2,0"
                ItemsSource="{Binding Source={StaticResource clientsCvs}}"
                Background="#fff8f8f8"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                SelectionMode="Single"
                FontFamily="pack://application:,,,/Resources/#roboto"
                FontSize="14pt"
                SelectionChanged="ClientsListView_SelectionChanged"
                BorderThickness="0">
                <ListView.View>
                    <GridView x:Name="ClientsGridView">
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="FrameworkElement.Margin" Value="0,3,0,3" />
                                <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/Resources/#roboto" />
                                <Setter Property="TextElement.FontSize" Value="16" />
                                <Setter Property="TextElement.FontWeight" Value="Normal" />
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Background }" />
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Foreground }" />
                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Background }" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Header="Name" Width="{Binding ElementName=column1, Path=ActualWidth}" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="Portfolio Value" Width="{Binding ElementName=column2, Path=ActualWidth}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=PortfolioValue, StringFormat='{}{0:N0}'}" TextAlignment="Right" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="" Width="{Binding ElementName=column3, Path=ActualWidth}"  >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="0,0,0,0" />
                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Foreground }" />
                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Background }" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#6A6A6A" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6A6A6A" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <!--https://stackoverflow.com/a/10309506/1527706-->
            <Grid x:Name="ClientsGridViewWidth" Visibility="Hidden" Height="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.45*"/>
                    <ColumnDefinition Width="0.45*"/>
                    <ColumnDefinition Width="0.1*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" x:Name="column1" Background="Red"/>
                <TextBlock Grid.Column="1" x:Name="column2" Background="Green"/>
                <TextBlock Grid.Column="2" x:Name="column3" Background="Blue"/>
            </Grid>
            <ListView x:Name="ClientPortfolioListView"  Grid.Column="1" Margin="3,0,-4,0" Padding="2,0,5,0" BorderBrush="Black" BorderThickness="0" Background="#fff8f8f8" ItemsSource="{StaticResource ClientPortfolio}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single" FontFamily="pack://application:,,,/Resources/#roboto" FontSize="14pt" >
                <ListView.View>
                    <GridView x:Name="ClientPortfolioGridView">
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="FrameworkElement.Margin" Value="0,3,0,3" />
                                <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/Resources/#roboto" />
                                <Setter Property="TextElement.FontSize" Value="16" />
                                <Setter Property="TextElement.FontWeight" Value="Normal" />
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Background }" />
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Foreground }" />
                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Background }" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Header="RIC" Width="{Binding ElementName=columnP1, Path=ActualWidth}" DisplayMemberBinding="{Binding RIC}" />
                        <GridViewColumn Header="Price" Width="{Binding ElementName=columnP2, Path=ActualWidth}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Price, StringFormat='{}{0:N1}'}" TextAlignment="Right" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Shares" Width="{Binding ElementName=columnP2, Path=ActualWidth}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Shares}" TextAlignment="Right" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="" Width="{Binding ElementName=columnP3, Path=ActualWidth}" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="0,0,0,0" />
                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Foreground }" />
                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=Background }" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <!--https://stackoverflow.com/a/10309506/1527706-->
            <Grid x:Name="ClientPortfolioGridViewWidth" Visibility="Hidden" Height="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.38*"/>
                    <ColumnDefinition Width="0.30*"/>
                    <ColumnDefinition Width="0.30*"/>
                    <ColumnDefinition Width="0.05*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" x:Name="columnP1" Background="Red"/>
                <TextBlock Grid.Column="1" x:Name="columnP2" Background="Green"/>
                <TextBlock Grid.Column="2" x:Name="columnP3" Background="Blue"/>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" >
            <Button x:Name="LinkButton" Visibility="Collapsed" Click="LinkButton_Click" Margin="10,0,0,0" FontFamily="pack://application:,,,/Resources/#roboto"  FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Cursor="Hand" BorderThickness="0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="#ff819191"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                www.Tick42.com
            </Button>
            <StackPanel x:Name="ConnectivityIndicatorStackPanel" Margin="0,0,10,0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                <Label x:Name="ConnectivityCircleLabel" FontFamily="Arial" Foreground="#ff81ae5a" FontWeight="ExtraLight" FontSize="8" HorizontalAlignment="Right"  VerticalAlignment="Center" RenderTransformOrigin="0.54,0.54">
                    <Label.RenderTransform>
                        <ScaleTransform ScaleX="5" ScaleY="5"></ScaleTransform>
                    </Label.RenderTransform> ⚬
                </Label>
                <Label x:Name="ConnectivityTextLabel"  FontFamily="pack://application:,,,/Resources/#roboto" Foreground="#ff819191" FontSize="14" HorizontalAlignment="Right"  VerticalAlignment="Center" Cursor="Hand" MouseLeftButtonUp="ConnectivityTextLabel_MouseLeftButtonUp">Connected</Label>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
